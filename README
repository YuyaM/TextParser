これは、TextParser ライブラリ です。
ver 1.1

ビルド方法 

(1) configure を利用する方法
$ ./configure 
$　make 
$ sudo make install or # make install 

configureオプション
prefix=PREFIX : インストール先です。 デフォルトは/usr/localです。
ライブラリが PREFIX/lib
ヘッダファイルが PREFIX/include　
にそれぞれインストールされます。

--enable-fortran 
fortran90 のAPIとExampleをビルドします。
デフォルトでは無効になっています。

--enable-mpi
MPI用のAPIとExampleをビルドします。
デフォルトでは無効になっています。
CXX にmpi 対応のコンパイラを指定してください。

作成/インストールされるライブラリは、*.so(shared library) *.a(static library) 双方です。
リンク時に -LPREFIX/lib -lTextParser (-lTextParser_f90api -lTextParser_mpi)
を指定すると、リンク時のオプション(-shared|-staric)によって、　.so または　.a がリンクされます。
.so を利用する場合は、LD_LIBRARY_PATH か　ldconfigの設定が必要なので、適宜行ってください。

(2) Makefile_hand を利用する方法 
$make -f Makefile_hand でビルドできます。

※注意事項
  configureを利用してビルドした後に、Makefile_handを行う場合、必ず事前に
  make distclean を実行して下さい。

利用出来るターゲット
・　mpi 
MPI用のライブラリをビルドします。デフォルトでは無効になっています。
Makefile_hand内部で　mpi 対応のコンパイラを指定してください。

・　f90　api
fortran90 のAPIとExampleをビルドします。
デフォルトでは無効になっています。

作成されるライブラリは　static library (.a) のみです。libディレクトリに作成されます。


利用方法

ユーザープログラムは、次の様にビルドします。
例1
ソースコード　myprog.cpp から 実行ファイル myprog　を作成
PREFIX は、/usr/local/TextParser

g++ -o myprog myprog.cpp -I/usr/local/TextParser/include -L/usr/local/TextParser/lib -lTextParser

実行する際は、
./myprog 
です。

ただし、共有ライブラリでリンクした場合は、次の環境設定が必要です。
bash の場合
$ export LD_LAIBRARY_PATH=$LD_LAIBRARY_PATH:/usr/local/TextParser/lib

例2
ソースコード　myprog.c から 実行ファイル myprog　を作成
PREFIX は、/usr/local/TextParser

gcc -o myprog myprog.c -I/usr/local/TextParser/include -L/usr/local/TextParser/lib -lTextParser -lstdc++

実行する際は、
./myprog 
です。

ただし、共有ライブラリでリンクした場合は、次の環境設定が必要です。
bash の場合
$ export LD_LAIBRARY_PATH=$LD_LAIBRARY_PATH:/usr/local/TextParser/lib


例3
ソースコード　myprog.f90 から 実行ファイル myprog　を作成
PREFIX は、/usr/local/TextParser

gfortran -o myprog myprog.f90 -I/usr/local/TextParser/include -L/usr/local/TextParser/lib -lTextParser -lTextParser_f90api -lstdc++

実行する際は、
./myprog 
です。

ただし、共有ライブラリでリンクした場合は、次の環境設定が必要です。
bash の場合
$ export LD_LAIBRARY_PATH=$LD_LAIBRARY_PATH:/usr/local/TextParser/lib
